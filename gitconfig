[alias]
  author   = !sh -c 'git config --get user.name && \
                     git config --get user.email'
  authors  = shortlog -sne --no-merges
  amend    = "!f() { $DOTDIR/plugins/git/scripts/amend "$@"; }; f"
  am       = "!f() { $DOTDIR/plugins/git/scripts/amend "$@"; }; f"
  amsc     = commit --amend --no-verify --verbose
  amst     = !sh -c 'SKIP_CHECKS=test_history git amend'
  amra     = commit --amend --reset-author
  a        = add
  ap       = add --patch
  br       = branch
  b        = branch
  ci       = commit -v
  cisc     = commit --no-verify
  cist     = !sh -c 'SKIP_CHECKS=test_history git commit -v'
  ctags    = "!f() { $DOTDIR/plugins/git/scripts/ctags "$@"; }; f"
  co       = checkout
  com      = checkout master
  d        = diff
  f        = fetch
  fo       = fetch origin
  fresh    = "!f() { $DOTDIR/plugins/git/scripts/fresh "$@"; }; f"
  hash     = !sh -c 'git rev-parse ${1-HEAD}' -
  hist     = log --oneline --graph --decorate
  pg       = push gerrit
  pouf     = push origin -uf
  rb       = rebase
  rbc      = rebase --continue
  rbi      = rebase --interactive
  rbom     = rebase origin/master
  rf       = !STASH=$(git stash) && \
             echo $STASH && \
             git fetch origin && \
             REBASE=$(git rebase origin/master) && \
             echo $REBASE && \
             CONFLICT=$(echo $REBASE | grep CONFLICT) && \
             test -z "$CONFLICT" && \
             bundle && \
             be rake db:migrate db:test:prepare && \
             test \"$STASH\" != \"No local changes to save\" && \
             git stash pop
  sm       = submodule
  smu      = submodule update --init
  st       = status -sb
  ss       = stash
  sp       = stash pop
  sl       = stash list
  staged   = diff --cached
  sui      = submodule update --init
  track    = !sh -c 'git branch --set-upstream `git rev-parse --abbrev-ref HEAD` $1' -
  tracking = "!f() { $DOTDIR/plugins/git/scripts/tracking "$@"; }; f"
  unstage  = !sh -c 'git reset HEAD'
  unstash  = stash pop
  unwip    = reset HEAD~
  wip      = commit -m WIP --no-verify
[apply]
  whitespace = fix
[branch]
  autosetupmerge  = always
  autosetuprebase = always
[color]
  ui = auto
[color "branch"]
  current      = green bold
  local        = bold
  plain        = normal
  remote       = cyan bold
[color "decorate"]
  branch       = white bold
  remoteBranch = cyan bold
  stash        = magenta
  HEAD         = green
[color "diff"]
  commit       = yellow bold
  frag         = cyan
  func         = bold cyan
  meta         = bold
  new          = green bold
  plain        = normal
  old          = red bold
  untracked    = bold
  whitespace   = yellow reverse
[color "grep"]
  context      = normal
  filename     = green bold
  function     = cyan bold
  linenumber   = yellow bold
  match        = yellow reverse
  selected     = normal
  separator    = normal
[color "interactive"]
  error        = red bold
  header       = cyan
  help         = yellow bold
  prompt       = magenta bold
[color "status"]
  header       = cyan
  added        = green bold
  branch       = green bold
  changed      = red bold
  nobranch     = red bold
  untracked    = normal
[core]
  autocrlf     = input
  excludesfile = ~/.gitignore
	editor = vim
[user]
	name = Hao Su
	email = hao.su@zalando.de
	gerrit = hao
[credential]
  helper = osxkeychain
[github]
  user = haosu
[grep]
  extendedRegexp = true
  lineNumber     = true
[help]
  autocorrect = 10
[merge]
  log = 100
[pager]
  color = true
[push]
  default = current
[rebase]
  autosquash = true
  stat       = true
[rerere]
  enabled = 1
[include]
  path = ~/.gitconfig.local
